#Docker
##简介
* Docker依赖于“写时复制”模型，修改应用程序非常迅速，拥有很高的性能
* Docker的核心组件：
  * Docker客户端和服务器
  * Docker镜像
  * Registry
  * Docker容器
* Docker是一个客户机-服务器（C/S）架构的程序，提供了一个命令行工具以及一整套RESTful API，可以从本地客户端连接另一台宿主机的Docker守护程序。
* Docker镜像是基于联合（Union）文件系统的一种层式的机构，由一系列指令一步一步构建出来。
* Registry用来保存用户的镜像，分为公共跟私有两种。
* 容器是基于镜像启动起来的，我们只需要把应用程序或者服务打包放进去。
* Docker的技术组件：
  * 一个原生的Linux容器格式libcontainer，或者很流行的容器平台lxc，前者是Docker容器默认格式。
  * Linux内核的命名空间（Namespace），用于隔离文件系统、进程和网络：
    * 文件系统隔离：每个容器都有自己的root文件系统
    * 进程隔离：每个容器都运行在自己的进程环境中
    * 网络隔离：容器间的虚拟网络接口跟IP地址都是分开的
    * 资源隔离和分组：使用cgroups（即control group，Linux的内核特性之一）将CPU和内存之类的资源独立分配给每个Docker容器
    * 写时复制：文件系统都是用写时复制创建，这意味着文件系统是分层的、快速的，而且占用磁盘空间更小
    * 日志：容器产生的STDOUT、STDERR和STDIN这些IO流都会被收集并计入日志，用来进行日志分析和故障排错
    * 交互式Shell：用户可以创建一个伪tty终端，将其连接到STDIN，为容器提供一个交互式的Shell
    
##Docker安装
* 前提条件：
  * 64位CPU的计算机
  * Linux3.8或者更高版本的内核
  * 内存必须支持一种适合的存储驱动（storage driver），例如:  
      *  Device Manager
      *  AUFS
      *  vfs
      *  btrfs
      *  默认存储通常是Device Mapper
  * 内核必须支持并开启cgroup和命名空间（namespace）功能
  * 检查前提条件：  
      * 用```uname```命令来检查内核版本
      ```uname -a```
      * 检查Device Mapper
      ``` ls -l /sys/class/misc/device-mapper ```

* 安装Docker：
添加Docker的APT仓库：
```sudo sh -c "echo deb https://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"```
检查是否有curl命令：
```whereis curl```
如果没有，需要安装：
```sudo apt-get -y install curl```
接下来添加Docker的GPG仓库：
```curl -s https://get.docker.io/gpg | sudo apt-key add -```
